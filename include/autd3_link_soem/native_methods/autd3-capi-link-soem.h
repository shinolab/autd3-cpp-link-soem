#pragma once

/* Warning, this file is autogenerated by cbindgen. Don't modify this manually. */

#include <cstdint>

namespace autd3::native_methods {

enum class Status : uint8_t {
  Error = 0,
  StateChanged = 1,
  Lost = 2,
};

struct EthernetAdaptersPtr {
  const void *_0;
};

struct ThreadPriorityPtr {
  const void *_0;
};

extern "C" {

[[nodiscard]] EthernetAdaptersPtr AUTDAdapterPointer();

[[nodiscard]] uint32_t AUTDAdapterGetSize(EthernetAdaptersPtr adapters);

void AUTDAdapterGetAdapter(EthernetAdaptersPtr adapters, uint32_t idx, char *desc, char *name);

void AUTDAdapterPointerDelete(EthernetAdaptersPtr adapters);

void AUTDLinkSOEMTracingInit();

ResultStatus AUTDLinkSOEMTracingInitWithFile(const char *path);

[[nodiscard]]
ResultSyncLinkBuilder AUTDLinkSOEM(const char *ifname,
                                   uint32_t buf_size,
                                   Duration send_cycle,
                                   Duration sync0_cycle,
                                   const void* err_handler,
                                   const void* err_context,
                                   SyncMode mode,
                                   ProcessPriority process_priority,
                                   ThreadPriorityPtr thread_priority,
                                   Duration state_check_interval,
                                   TimerStrategy timer_strategy,
                                   Duration tolerance,
                                   Duration sync_timeout);

[[nodiscard]]
bool AUTDLinkSOEMIsDefault(uint32_t buf_size,
                           Duration send_cycle,
                           Duration sync0_cycle,
                           SyncMode mode,
                           ProcessPriority process_priority,
                           ThreadPriorityPtr thread_priority,
                           Duration state_check_interval,
                           TimerStrategy timer_strategy,
                           Duration tolerance,
                           Duration sync_timeout);

[[nodiscard]] uint32_t AUTDLinkSOEMStatusGetMsg(Status src, char *dst);

[[nodiscard]] ResultSyncLinkBuilder AUTDLinkRemoteSOEM(const char *addr);

[[nodiscard]] ThreadPriorityPtr AUTDLinkSOEMThreadPriorityMin();

[[nodiscard]] ThreadPriorityPtr AUTDLinkSOEMThreadPriorityCrossplatform(uint8_t value);

[[nodiscard]] ThreadPriorityPtr AUTDLinkSOEMThreadPriorityMax();

} // extern "C"

} // namespace autd3::native_methods
